name: Build and Release OP Media Downloader

on:
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build for Windows
        run: yarn run build:win

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: op-media-downloader-windows
          path: dist/*.exe

  build-mac-intel:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build for macOS (Intel)
        env:
          ARCH: x64
        run: yarn run build:mac

      - name: Upload macOS Intel artifact
        uses: actions/upload-artifact@v3
        with:
          name: op-media-downloader-mac-intel
          path: dist/*.dmg

  build-mac-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build for macOS (ARM)
        env:
          ARCH: arm64
        run: yarn run build:mac

      - name: Upload macOS ARM artifact
        uses: actions/upload-artifact@v3
        with:
          name: op-media-downloader-mac-arm
          path: dist/*.dmg

  release:
    needs:
      - build-windows
      - build-mac-intel
      - build-mac-arm
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: op-media-downloader-windows
          path: release/windows

      - name: Download macOS Intel artifact
        uses: actions/download-artifact@v3
        with:
          name: op-media-downloader-mac-intel
          path: release/mac-intel

      - name: Download macOS ARM artifact
        uses: actions/download-artifact@v3
        with:
          name: op-media-downloader-mac-arm
          path: release/mac-arm

      - name: Attach assets to existing release
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
            });

            const release = releases.find(r => r.tag_name === github.context.ref.replace('refs/tags/', ''));
            if (!release) {
              throw new Error(`Release with tag ${github.context.ref.replace('refs/tags/', '')} does not exist.`);
            }

            console.log(`Found release: ${release.name} (${release.id})`);

            const artifacts = [
              'release/windows/*.exe',
              'release/mac-intel/*.dmg',
              'release/mac-arm/*.dmg'
            ];

            for (const artifact of artifacts) {
              await github.rest.repos.uploadReleaseAsset({
                owner: github.context.repo.owner,
                repo: github.context.repo.repo,
                release_id: release.id,
                name: artifact.split('/').pop(),
                data: require('fs').readFileSync(artifact),
              });
            }
